name: Build and Deploy

on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types: [created]

jobs:
  # Update lockfile for Dependabot PRs
  update-lockfile:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && startsWith(github.head_ref, 'dependabot/')
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - uses: oven-sh/setup-bun@v1
      
      - name: Install and update lockfile
        run: bun install
      
      - name: Commit and push updated lockfile
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add bun.lock
          git commit -m "chore: update lockfile (auto-fix for Dependabot PR)" || exit 0
          git push

  # Build and push Docker image
  build:
    runs-on: ubuntu-latest
    needs: [update-lockfile]
    # Run this job if:
    # 1. This is NOT a PR (like push to main or release)
    # 2. OR this is a PR but NOT from Dependabot
    # 3. OR this is a Dependabot PR AND the update-lockfile job completed successfully
    if: |
      github.event_name != 'pull_request' || 
      (github.event_name == 'pull_request' && !startsWith(github.head_ref, 'dependabot/')) ||
      (github.event_name == 'pull_request' && startsWith(github.head_ref, 'dependabot/') && needs.update-lockfile.result == 'success')
    
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event_name == 'pull_request' && startsWith(github.head_ref, 'dependabot/') && github.head_ref || '' }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set image metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          type=ref,event=tag
          type=raw,value=latest,enable={{is_default_branch}}
          type=sha,format=short
          type=ref,event=branch
          type=ref,event=pr

    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        platforms: linux/amd64, linux/arm64/v8
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}